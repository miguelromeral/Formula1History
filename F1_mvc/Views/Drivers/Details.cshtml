@using F1_mvc.Models
@model drivers

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h1>
        @(Model.forename + " " + Model.surname)
    </h1>
</div>


<div class="container">
    <div class="col-lg-6">

        <table class="table table-hover">
            <tr>
                <td>Fullname</td>
                <td>
                    <a href="@Model.url">@ViewBag.Title</a>
                </td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.number)</td>
                <td>@Model.number</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.code)</td>
                <td>@Model.code</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.dob)</td>
                <td>@Model.dob</td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.nationality)</td>
                <td>@Model.nationality</td>
            </tr>

            @Html.Action("Statistics", "Drivers", new { id = Model.driverId })
        </table>


    </div>
    <div class="col-lg-6">
        @*<div id="picture" style="width: 100%; height: 500px; margin-bottom: 2px;">

        </div>

        <button id="bReload" lass="btn btn-primary btn-sm">Reload image</button>*@
    </div>


</div>

@section scripts{


    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script type="text/javascript">
        
        $(document).ready(function () {
            $('#bReaload').click(CallFlickrHere);
            CallFlickrHere();
        });

        function CallFlickrHere() {
            getImageFromFlickr('#picture', '@(String.Format("{0} {1}", Model.forename, Model.surname))');
        }

        function getImageFromFlickr(selector, keyword) {

            $.getJSON("http://api.flickr.com/services/feeds/photos_public.gne?jsoncallback=?",
                {
                    sort: 'relevance',
                    tags: keyword,
                    tagmode: "all",
                    format: "json"
                },
                function (data) {
                    if (data.items.length != 0){

                        var rnd = Math.floor(Math.random() * data.items.length);
                        //var rnd = 0;

                        var img = data.items[rnd]['media'];

                        var image_src = data.items[rnd]['media']['m'].replace("_m", "_b");
                        
                        $(selector).css('background-image', "url('" + image_src + "')")
                            .css('background-position', 'center')
                            .css('background-repeat', 'no-repeat')
                            .css('background-size', 'cover')
                            .css('position', 'relative');

                    }
                });
        }

    </script>*@


}